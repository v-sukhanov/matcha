{"version":3,"sources":["./src/app/features/signin/signin.component.ts","./src/app/features/signin/signin.component.html","./src/app/features/confirm/confirm.component.ts","./src/app/features/confirm/confirm.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/features/recovery-password/recovery-password.component.ts","./src/app/features/recovery-password/recovery-password.component.html","./src/app/app.module.ts","./src/app/core/services/http.service.ts","./src/app/shared/form-validators.class.ts","./src/app/core/services/data.service.ts","./src/app/features/signup/signup.component.ts","./src/app/features/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/features/forgot-password/forgot-password.component.ts","./src/app/features/forgot-password/forgot-password.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC0B;AAGxB;AAC8B;;;;;;;;;;;ICWzE,0EACC;IAAA,uEAAM;IAAA,uDAAS;IAAA,4DAAO;IACvB,4DAAM;;;IAF4B,4EAAK;IAChC,0DAAS;IAAT,yEAAS;;ADUV,MAAM,eAAe;IAI3B,YACS,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CACxB;YACC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACpD,CACD,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;IACR,CAAC;IAEM,MAAM;QACZ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC;aAC5F,IAAI,CACJ,iEAAU,CAAC,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,0CAAK,CAAC;QACd,CAAC,CAAC,CACF;aACA,SAAS,CAAC,CAAC,EAAE,YAAY,EAAE,WAAW,EAAE,EAAE,EAAE;YAC5C,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,sCAAsC,WAAW,kBAAkB,YAAY,EAAE,CAAC;QAC1G,CAAC,CAAC,CAAC;IACL,CAAC;;8EA9BW,eAAe;+FAAf,eAAe;QC5B5B,0EACC;QAAA,yEACC;QAAA,oEACD;QAAA,4DAAM;QACN,yEAGC;QAAA,iFACC;QAAA,4EAAW;QAAA,mEAAQ;QAAA,4DAAY;QAC/B,sEACD;QAAA,4DAAiB;QACjB,iFACC;QAAA,4EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEAED;QAAA,4DAAiB;QAClB,4DAAM;QACN,6GAEM;QACN,uEACC;QAAA,6EAAuF;QAAnB,wIAAS,YAAQ,IAAC;QAAC,mEAAO;QAAA,4DAAS;QACxG,4DAAM;QACN,0EACC;QAAA,uEACC;QAAA,wEAAwB;QAAA,kEAAM;QAAA,4DAAI;QACnC,4DAAM;QACN,uEACC;QAAA,wEAAwB;QAAA,4EAAgB;QAAA,4DAAI;QAC7C,4DAAM;QACP,4DAAM;QACP,4DAAO;;QA/BA,+EAAkB;QAiBD,2DAAS;QAAT,+EAAS;QAIvB,0DAAyB;QAAzB,sFAAyB;+5EDTtB;YACX,mEAAO,CAAC,MAAM,EAAE;gBACf,sEAAU,CAAC,WAAW,EAAE;oBACvB,iEAAK,CAAC;wBACL,MAAM,EAAE,KAAK;wBACb,OAAO,EAAE,GAAG;wBACZ,QAAQ,EAAE,QAAQ;qBAClB,CAAC;oBACF,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC;wBAC/B,MAAM,EAAE,GAAG;wBACX,OAAO,EAAE,GAAG;qBACZ,CAAC,CAAC;iBACH,CAAC;aACF,CAAC;SACF;;;;;;;;;;;;;AExBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AAC0B;;;;AAQtD,MAAM,gBAAgB;IAE5B,YACS,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;IAC9B,CAAC;IAEL,QAAQ;QACP,IAAI,CAAC,MAAM,CAAC,WAAW;aACrB,IAAI,CACJ,2DAAI,CAAC,CAAC,CAAC,EACP,gEAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YACpB,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,GAAG,EAAE,EAAE;YAClB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClC,OAAO,0CAAK,CAAC;QACd,CAAC,CAAC,CACF;aACA,SAAS,CAAC,MAAM,CAAC,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;;gFAvBW,gBAAgB;gGAAhB,gBAAgB;QCX7B,oEAAG;QAAA,yEAAc;QAAA,4DAAI;;;;;;;;;;;;;;ACArB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,GAAG,EAAE,4BAA4B;CAClC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACT5D,MAAM,YAAY;IALzB;QAMC,UAAK,GAAG,cAAc,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEACI;QAAA,sEACI;QAAA,2EAA+B;QACnC,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;ACHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACA;AAE9B;;;;;;;;;AAQ/B,MAAM,yBAAyB;IAKrC,YACS,MAAsB,EACtB,OAAe,EACf,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CACxB;YACC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,aAAa,CAAC,CAAC;YAClF,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,aAAa,CAAC,CAAC;SACzF,CACD,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,MAAM,CAAC,WAAW;aACrB,IAAI,CACJ,2DAAI,CAAC,CAAC,CAAC,CACP;aACA,SAAS,CAAC,MAAM,CAAC,EAAE;YACnB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;QACF,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ;QACd,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAClI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACJ,CAAC;;kGApCW,yBAAyB;yGAAzB,yBAAyB;QCZtC,0EACC;QAAA,yEACC;QAAA,8EACD;QAAA,4DAAM;QACN,yEAGC;QAAA,iFACC;QAAA,4EAAW;QAAA,uEAAY;QAAA,4DAAY;QACnC,sEACD;QAAA,4DAAiB;QACjB,iFACC;QAAA,4EAAW;QAAA,gFAAoB;QAAA,4DAAY;QAC3C,uEAED;QAAA,4DAAiB;QAClB,4DAAM;QACN,uEACC;QAAA,6EAAyF;QAAvD,kJAAS,cAAU,IAAC;QAAmC,mEAAO;QAAA,4DAAS;QAC1G,4DAAM;QACN,0EACC;QAAA,uEACC;QAAA,wEAAwB;QAAA,kEAAM;QAAA,4DAAI;QACnC,4DAAM;QACN,uEACC;QAAA,wEAAwB;QAAA,kEAAM;QAAA,4DAAI;QACnC,4DAAM;QACP,4DAAM;QACP,4DAAO;;QA5BA,+EAAkB;QAkBf,2DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;;ACjBnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACsB;AACA;AACnB;AAEgB;AACT;AACsB;AACpB;AACN;AACgD;AAC1C;AACA;AACH;AACgB;AACuB;;AA6BxF,MAAM,SAAS;;yFAAT,SAAS,cAHT,2DAAY;6IAGZ,SAAS,mBAPV;QACV,wEAAW;QACX,wEAAW;KACX,YAdQ;YACR,uEAAa;YACb,oEAAgB;YAChB,+DAAU;YACV,+EAAkB;YAClB,sEAAc;YACd,4FAAuB;YACvB,wEAAe;YACf,mEAAmB;YACnB,sEAAgB;SAChB;oIAQW,SAAS,mBAzBpB,2DAAY;QACZ,iFAAe;QACf,iFAAe;QACf,kHAAyB;QACzB,qFAAgB;QAChB,4GAAuB,aAGvB,uEAAa;QACb,oEAAgB;QAChB,+DAAU;QACV,+EAAkB;QAClB,sEAAc;QACd,4FAAuB;QACvB,wEAAe;QACf,mEAAmB;QACnB,sEAAgB;;;;;;;;;;;;;ACtClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AAEC;AACf;;;AAE1C,MAAM,QAAQ;IAGpB,YAAY,IAAwB;QACnC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3B,CAAC;CACD;AAEM,MAAM,WAAW;IAIvB,YAAY,IAAsC;QACjD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3B,CAAC;CACD;AAIM,MAAM,WAAW;IAEvB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IAC3C,CAAC;IAEM,IAAI,CAAkC,GAAW,EAAE,KAAe;QACxE,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACpC,GAAG,qEAAW,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,KAAK,EACjC;YACC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;SAC9B,CAAC,CAAC;QAEJ,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAEO,cAAc;QACrB,MAAM,OAAO,GAAG,IAAI,gEAAW,EAAE;aAC/B,MAAM,CAAC,kBAAkB,EAAE,gBAAgB,CAAC;aAC5C,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAE7C,OAAO,OAAO,CAAC;IAChB,CAAC;IAEO,sBAAsB,CAAY,MAA6B;QACtE,OAAO,MAAM,CAAC,IAAI,CACjB,0DAAG,CAAC,IAAI,CAAC,EAAE;YACV,MAAM,IAAI,GAAG,IAAI,WAAW,CAAY,IAAI,CAAC,CAAC;YAE9C,IAAI,IAAI,CAAC,IAAI,EAAE;gBACd,OAAO,IAAI,CAAC,IAAI,CAAC;aACjB;YAED,IAAI,IAAI,CAAC,KAAK,EAAE;gBACf,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/B;YAED,OAAO,IAAI,CAAC;QACb,CAAC,CAAC,CACF,CAAC;IACH,CAAC;;sEAvCW,WAAW;8FAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;ACbxB;AAAA;AAAO,MAAM,cAAc;IAY1B,mFAAmF;IAEnF;IACA,CAAC;IACD,MAAM,CAAC,aAAa,CAAC,OAAoB;QACxC,MAAM,gBAAgB,GAAW,QAAQ,CAAC;QAC1C,MAAM,gBAAgB,GAAW,QAAQ,CAAC;QAC1C,MAAM,iBAAiB,GAAW,iCAAiC,CAAC;QACpE,MAAM,gBAAgB,GAAW,UAAU,CAAC;QAC5C,IAAI,cAAc,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACnG,OAAO;gBACN,aAAa,EAAE,IAAI;gBACnB,eAAe,EAAE,cAAc,CAAC,mBAAmB;gBACnD,WAAW,EAAE,OAAO,CAAC,KAAK;aAC1B,CAAC;SACF;QACD,IAAI,cAAc,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC3G,OAAO;gBACN,aAAa,EAAE,IAAI;gBACnB,eAAe,EAAE,cAAc,CAAC,uBAAuB;gBACvD,WAAW,EAAE,OAAO,CAAC,KAAK;aAC1B,CAAC;SACF;QACD,IAAI,cAAc,CAAC,OAAO,CAAC,gBAAgB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACrG,OAAO;gBACN,aAAa,EAAE,IAAI;gBACnB,eAAe,EAAE,cAAc,CAAC,iBAAiB;gBACjD,WAAW,EAAE,OAAO,CAAC,KAAK;aAC1B,CAAC;SACF;QACD,IAAI,cAAc,CAAC,OAAO,CAAC,cAAc,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;YACtI,OAAO;gBACN,aAAa,EAAE,IAAI;gBACnB,eAAe,EAAE,IAAI,MAAM,CAAC,MAAM,GAAG,cAAc,CAAC,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC;gBACpF,WAAW,EAAE,OAAO,CAAC,KAAK;aAC1B,CAAC;SACF;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,OAAoB;QACzC,MAAM,OAAO,GAAW,0CAA0C,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACjC,OAAO;gBACN,cAAc,EAAE,IAAI;gBACpB,eAAe,EAAE,OAAO;gBACxB,WAAW,EAAE,OAAO,CAAC,KAAK;aAC1B,CAAC;SACF;QACD,OAAO,IAAI,CAAC;IACb,CAAC;;AA7Da,sBAAO,GAA8B;IAClD,YAAY,EAAE,IAAI;IAClB,gBAAgB,EAAE,IAAI;IACtB,sBAAsB,EAAE,KAAK;IAC7B,gBAAgB,EAAE,KAAK;IACvB,cAAc,EAAE,CAAC;IACjB,mBAAmB,EAAE,KAAK;CAC1B,CAAC;AACa,kCAAmB,GAAW,OAAO,CAAC;AACrC,sCAAuB,GAAW,OAAO,CAAC;AAC1C,gCAAiB,GAAW,OAAO,CAAC;;;;;;;;;;;;;;;;;;;ACjB9C,MAAM,WAAW;IAEvB,YAAoB,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAC7C,CAAC;IAEM,MAAM,CAAC,MAAyB;QACtC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAU,SAAS,EAAE,MAAM,CAAC,CAAC;IAC3D,CAAC;IAEM,MAAM,CAAC,QAAgB,EAAE,QAAgB;QAC/C,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAgC,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;IACjG,CAAC;IAEM,OAAO,CAAC,IAAY;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAO,UAAU,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,cAAc,CAAC,KAAa;QAClC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAO,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEM,QAAQ,CAAC,IAAY,EAAE,QAAgB,EAAE,eAAuB;QACtE,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAO,WAAW,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,CAAC;IACvF,CAAC;;sEAvBW,WAAW;8FAAX,WAAW,WAAX,WAAW;;;;;;;;;;;;;ACLxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACN;AAEjC;AACS;AACqC;;;;;;;;;;;ICG9E,4EACC;IAAA,oEACD;IAAA,4DAAY;;;IAsCd,0EACC;IAAA,uEAAM;IAAA,uDAAS;IAAA,4DAAO;IACvB,4DAAM;;;IAF4B,4EAAK;IAChC,0DAAS;IAAT,yEAAS;;ADrBV,MAAM,eAAe;IAY3B,YAAoB,YAAyB,EAAU,OAAe;QAAlD,iBAAY,GAAZ,YAAY,CAAa;QAAU,YAAO,GAAP,OAAO,CAAQ;QACrE,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,cAAc,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,aAAa,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,sBAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,aAAa,CAAC,CAAC,CAAC;QACvG,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3F,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CACxB;YACC,KAAK,EAAE,IAAI,CAAC,YAAY;YACxB,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,eAAe,EAAE,IAAI,CAAC,sBAAsB;YAC5C,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,SAAS,EAAE,IAAI,CAAC,gBAAgB;SAChC,CACD,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,QAAQ;IACR,CAAC;IAEO,cAAc;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,cAAc,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,aAAa,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,sBAAsB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,aAAa,CAAC,CAAC,CAAC;QACvG,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3F,IAAI,CAAC,eAAe,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,gBAAgB,GAAG,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CACxB;YACC,KAAK,EAAE,IAAI,CAAC,YAAY;YACxB,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,eAAe,EAAE,IAAI,CAAC,sBAAsB;YAC5C,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,QAAQ,EAAE,IAAI,CAAC,eAAe;YAC9B,SAAS,EAAE,IAAI,CAAC,gBAAgB;SAChC,CACD,CAAC;IACH,CAAC;IAEM,MAAM;QACZ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YACxB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;YAC9B,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACpC,eAAe,EAAE,IAAI,CAAC,sBAAsB,CAAC,KAAK;YAClD,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACpC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK;YACpC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK;SACtC,CAAC;aACA,IAAI,CACJ,iEAAU,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE;YACxB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,0CAAK,CAAC;QACd,CAAC,CAAC,CACF;aACA,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;;8EA5EW,eAAe;+FAAf,eAAe;QC7B5B,0EACC;QAAA,yEACC;QAAA,oEACD;QAAA,4DAAM;QACN,yEAEC;QAAA,iFACC;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,sEACA;QAAA,uHAEY;QACb,4DAAiB;QACjB,iFACC;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,6EACC;QAAA,qEACD;QAAA,4DAAY;QACb,4DAAiB;QACjB,kFACC;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEACA;QAAA,6EACC;QAAA,qEACD;QAAA,4DAAY;QACb,4DAAiB;QACjB,kFACC;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,uEACA;QAAA,6EACC;QAAA,qEACD;QAAA,4DAAY;QACb,4DAAiB;QACjB,kFACC;QAAA,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,uEACA;QAAA,6EACC;QAAA,qEACD;QAAA,4DAAY;QACb,4DAAiB;QACjB,kFACC;QAAA,6EAAW;QAAA,4EAAgB;QAAA,4DAAY;QACvC,uEACA;QAAA,6EACC;QAAA,qEACD;QAAA,4DAAY;QACb,4DAAiB;QAClB,4DAAM;QACN,8GAEM;QAEN,uEACC;QAAA,8EAAkG;QAAnB,wIAAS,YAAQ,IAAC;QAAC,mEAAO;QAAA,4DAAS;QACnH,4DAAM;QACN,2EACC;QAAA,uEACC;QAAA,yEAAwB;QAAA,qFAAyB;QAAA,4DAAI;QACtD,4DAAM;QACN,uEACC;QAAA,yEAAwB;QAAA,4EAAgB;QAAA,4DAAI;QAC7C,4DAAM;QACP,4DAAM;QACP,4DAAO;;QAhEA,+EAAkB;QASV,0DAA0B;QAA1B,0FAA0B;QAwCjB,2DAAS;QAAT,+EAAS;QAKvB,0DAAoC;QAApC,qGAAoC;0hFDzCjC;YACX,mEAAO,CAAC,MAAM,EAAE;gBACf,sEAAU,CAAC,WAAW,EAAE;oBACvB,iEAAK,CAAC;wBACL,MAAM,EAAE,KAAK;wBACb,OAAO,EAAE,GAAG;wBACZ,QAAQ,EAAE,QAAQ;qBAClB,CAAC;oBACF,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC;wBAC/B,MAAM,EAAE,GAAG;wBACX,OAAO,EAAE,GAAG;qBACZ,CAAC,CAAC;iBACH,CAAC;aACF,CAAC;SACF;;;;;;;;;;;;;AE1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACc;AACtB;AACsB;AACG;AACuB;AACM;;;AAErG,MAAM,MAAM,GAAW;IACtB;QACC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;QACvB,QAAQ,EAAE;YACT,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE;YACrD;gBACC,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iFAAe;aAC1B;YACD;gBACC,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iFAAe;aAC1B;YACD;gBACC,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,oFAAgB;aAC3B;YACD;gBACC,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,2GAAuB;aAClC;YACD;gBACC,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,iHAAyB;aACpC;SACD;KACD;IACD;QACC,IAAI,EAAE,GAAG;QACT,UAAU,EAAE,EAAE;KACd;CACD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHnB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEV,gBAAgB,uFAFlB,4DAAY;;;;;;;;;;;;;AC5CvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACA;AAGxB;AACf;AAC6C;;;;;;;;;;;ICGzE,0EACC;IAAA,uEAAM;IAAA,yGAA8C;IAAA,4DAAO;IAC5D,4DAAM;;IAFoB,4EAAK;;;IAG/B,0EACC;IAAA,uEAAM;IAAA,uDAAS;IAAA,4DAAO;IACvB,4DAAM;;;IAF4B,4EAAK;IAChC,0DAAS;IAAT,yEAAS;;ADeV,MAAM,uBAAuB;IAKnC,YACS,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;QAEjC,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CACxB;YACC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,4EAAc,CAAC,cAAc,CAAC,CAAC;SAChF,CACD,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;IACR,CAAC;IAEM,QAAQ;QACd,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC;aAC9D,IAAI,CACJ,iEAAU,CAAC,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,OAAO,0CAAK,CAAC;QACd,CAAC,CAAC,CACF;aACA,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;;8FA9BW,uBAAuB;uGAAvB,uBAAuB;QC7BpC,0EACC;QAAA,yEACC;QAAA,4EACD;QAAA,4DAAM;QACN,yEACC;QAAA,iFACC;QAAA,4EAAW;QAAA,gEAAK;QAAA,4DAAY;QAC5B,sEACD;QAAA,4DAAiB;QAClB,4DAAM;QACN,mHAEM;QACN,mHAEM;QACN,uEACC;QAAA,6EAAyF;QAArB,gJAAS,cAAU,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC1G,4DAAM;QACN,0EACC;QAAA,uEACC;QAAA,wEAAwB;QAAA,qFAAyB;QAAA,4DAAI;QACtD,4DAAM;QACN,uEACC;QAAA,wEAAwB;QAAA,kEAAM;QAAA,4DAAI;QACnC,4DAAM;QACP,4DAAM;QACP,4DAAO;;QA3BA,+EAAkB;QAUlB,0DAAkB;QAAlB,kFAAkB;QAGD,0DAAS;QAAT,+EAAS;QAIvB,0DAAyB;QAAzB,sFAAyB;64FDJtB;YACX,mEAAO,CAAC,MAAM,EAAE;gBACf,sEAAU,CAAC,WAAW,EAAE;oBACvB,iEAAK,CAAC;wBACL,MAAM,EAAE,KAAK;wBACb,OAAO,EAAE,GAAG;wBACZ,QAAQ,EAAE,QAAQ;qBAClB,CAAC;oBACF,mEAAO,CAAC,gBAAgB,EAAE,iEAAK,CAAC;wBAC/B,MAAM,EAAE,GAAG;wBACX,OAAO,EAAE,GAAG;qBACZ,CAAC,CAAC;iBACH,CAAC;aACF,CAAC;SACF;;;;;;;;;;;;;;;;;;;AE3B6C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { EMPTY, pipe, timer } from 'rxjs';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormValidators } from '../../shared/form-validators.class';\nimport { DataService } from '../../core/services/data.service';\nimport { catchError } from 'rxjs/operators';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n\tselector: 'app-signin',\n\ttemplateUrl: './signin.component.html',\n\tstyleUrls: ['./signin.component.scss'],\n\tanimations: [\n\t\ttrigger('anim', [\n\t\t\ttransition('void => *', [\n\t\t\t\tstyle({\n\t\t\t\t\theight: '0px',\n\t\t\t\t\topacity: '0',\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t}),\n\t\t\t\tanimate('150ms ease-out', style({\n\t\t\t\t\theight: '*',\n\t\t\t\t\topacity: '*'\n\t\t\t\t}))\n\t\t\t]),\n\t\t])\n\t]\n})\nexport class SigninComponent implements OnInit   {\n\tpublic form: FormGroup;\n\tpublic errors: string[];\n\n\tconstructor(\n\t\tprivate _dataService: DataService\n\t) {\n\t\tthis.form = new FormGroup(\n\t\t\t{\n\t\t\t\tpassword: new FormControl('', [Validators.required]),\n\t\t\t\tusername: new FormControl('', [Validators.required]),\n\t\t\t}\n\t\t);\n\t\tthis.errors = [];\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tpublic signin(): void {\n\t\tthis._dataService.signin(this.form.controls.username.value, this.form.controls.password.value)\n\t\t\t.pipe(\n\t\t\t\tcatchError(({error}) => {\n\t\t\t\t\tthis.errors = error;\n\t\t\t\t\treturn EMPTY;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(({ refreshToken, accessToken }) => {\n\t\t\t\twindow.location.href = `http://localhost:4220?access_token=${accessToken}&refresh_token=${refreshToken}`;\n\t\t\t});\n\t}\n}\n","<form  [formGroup]=\"form\" class=\"form\" fxLayout=\"column\" fxLayoutGap=\"30px\">\r\n\t<div fxLayoutAlign=\"center center\">\r\n\t\tSIGN IN\r\n\t</div>\r\n\t<div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n\r\n\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>username</mat-label>\r\n\t\t\t<input formControlName=\"username\" matInput type=\"text\">\r\n\t\t</mat-form-field>\r\n\t\t<mat-form-field>\r\n\t\t\t<mat-label>password</mat-label>\r\n\t\t\t<input formControlName=\"password\" matInput type=\"password\">\r\n\r\n\t\t</mat-form-field>\r\n\t</div>\r\n\t<div *ngFor=\"let error of errors\" @anim class=\"error\">\r\n\t\t<span>{{error}}</span>\r\n\t</div>\r\n\t<div>\r\n\t\t<button [disabled]=\"form.invalid\" mat-raised-button color=\"primary\" (click)=\"signin()\">sign in</button>\r\n\t</div>\r\n\t<div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\r\n\t\t<div>\r\n\t\t\t<a routerLink=\"/signup\">signup</a>\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<a routerLink=\"/forgot\">forgot password?</a>\r\n\t\t</div>\r\n\t</div>\r\n</form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EMPTY, pipe } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\nimport { DataService } from '../../core/services/data.service';\n\n@Component({\n\tselector: 'app-confirm',\n\ttemplateUrl: './confirm.component.html',\n\tstyleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit {\n\n\tconstructor(\n\t\tprivate _route: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _dataService: DataService\n\t) { }\n\n\tngOnInit(): void {\n\t\tthis._route.queryParams\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tswitchMap((params) => {\n\t\t\t\t\treturn this._dataService.confirm(params.hash);\n\t\t\t\t}),\n\t\t\t\tcatchError((err) => {\n\t\t\t\t\tthis._router.navigate(['signin']);\n\t\t\t\t\treturn EMPTY;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(params => {\n\t\t\t\tthis._router.navigate(['signin']);\n\t\t\t});\n\t}\n\n}\n","<p>confirm works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api: 'http://localhost:5000/auth'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\ttitle = 'registration';\n}\n\n\n\n","<div class=\"content\" fxLayoutAlign=\"center center\">\n    <div>\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormValidators } from '../../shared/form-validators.class';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { take } from 'rxjs/operators';\nimport { DataService } from '../../core/services/data.service';\n\n@Component({\n\tselector: 'app-recovery-password',\n\ttemplateUrl: './recovery-password.component.html',\n\tstyleUrls: ['./recovery-password.component.scss']\n})\nexport class RecoveryPasswordComponent implements OnInit {\n\tpublic form: FormGroup;\n\tpublic errors: string[];\n\tprivate _hash: string;\n\n\tconstructor(\n\t\tprivate _route: ActivatedRoute,\n\t\tprivate _router: Router,\n\t\tprivate _dataService: DataService\n\t) {\n\t\tthis.form = new FormGroup(\n\t\t\t{\n\t\t\t\tpassword: new FormControl('', [Validators.required, FormValidators.passValidator]),\n\t\t\t\tconfirmPassword: new FormControl('', [Validators.required, FormValidators.passValidator]),\n\t\t\t}\n\t\t);\n\t\tthis.errors = [];\n\t}\n\n\tngOnInit(): void {\n\t\tthis._route.queryParams\n\t\t\t.pipe(\n\t\t\t\ttake(1)\n\t\t\t)\n\t\t\t.subscribe(params => {\n\t\t\t\tthis._hash = params.hash;\n\t\t\t\tif (!this._hash) {\n\t\t\t\t\tthis._router.navigate(['signin']);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tpublic recovery(): void {\n\t\tthis._dataService.recovery(this._hash, this.form.controls.password.value, this.form.controls.confirmPassword.value).subscribe(() => {\n\t\t\tthis._router.navigate(['signin']);\n\t\t});\n\t}\n}\n","<form  [formGroup]=\"form\" class=\"form\" fxLayout=\"column\" fxLayoutGap=\"30px\">\n\t<div fxLayoutAlign=\"center center\">\n\t\tRECOVERY PASSWORD\n\t</div>\n\t<div fxLayout=\"column\" fxLayoutGap=\"10px\">\n\n\n\t\t<mat-form-field>\n\t\t\t<mat-label>new password</mat-label>\n\t\t\t<input formControlName=\"password\" matInput type=\"text\" type=\"password\">\n\t\t</mat-form-field>\n\t\t<mat-form-field>\n\t\t\t<mat-label>confirm new password</mat-label>\n\t\t\t<input formControlName=\"confirmPassword\" matInput matInput type=\"password\">\n\n\t\t</mat-form-field>\n\t</div>\n\t<div>\n\t\t<button [disabled]=\"form.invalid\" (click)=\"recovery()\" mat-raised-button color=\"primary\">sign in</button>\n\t</div>\n\t<div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\t\t<div>\n\t\t\t<a routerLink=\"/signup\">signup</a>\n\t\t</div>\n\t\t<div>\n\t\t\t<a routerLink=\"/signin\">signin</a>\n\t\t</div>\n\t</div>\n</form>\n\n\n\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SigninComponent } from './features/signin/signin.component';\nimport { SignupComponent } from './features/signup/signup.component';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RecoveryPasswordComponent } from './features/recovery-password/recovery-password.component';\nimport { HttpService } from './core/services/http.service';\nimport { DataService } from './core/services/data.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfirmComponent } from './features/confirm/confirm.component';\nimport { ForgotPasswordComponent } from './features/forgot-password/forgot-password.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tSigninComponent,\n\t\tSignupComponent,\n\t\tRecoveryPasswordComponent,\n\t\tConfirmComponent,\n\t\tForgotPasswordComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tFlexModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tBrowserAnimationsModule,\n\t\tMatButtonModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t],\n\tproviders: [\n\t\tHttpService,\n\t\tDataService\n\t],\n\tbootstrap: [AppComponent]\n\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { catchError, map } from 'rxjs/operators';\n\nexport class ApiError {\n\tpublic messages?: string[];\n\n\tconstructor(init?: Partial<ApiError>) {\n\t\tObject.assign(this, init);\n\t}\n}\n\nexport class ApiResponse<TResponse> {\n\tpublic data?: TResponse;\n\tpublic error?: ApiError;\n\n\tconstructor(init?: Partial<ApiResponse<TResponse>>) {\n\t\tObject.assign(this, init);\n\t}\n}\n\n\n@Injectable()\nexport class HttpService {\n\n\tconstructor(private _httpClient: HttpClient) {\n\t}\n\n\tpublic post<TResponse = any, TRequest = any>(url: string, model: TRequest): Observable<TResponse> {\n\t\tconst request = this._httpClient.post<TResponse>(\n\t\t\t`${environment.api}${url}`, model,\n\t\t\t{\n\t\t\t\theaders: this._commonHeaders()\n\t\t\t});\n\n\t\treturn this._handleStandartRequest(request);\n\t}\n\n\tprivate _commonHeaders(): HttpHeaders {\n\t\tconst headers = new HttpHeaders()\n\t\t\t.append('X-Requested-With', 'XMLHttpRequest')\n\t\t\t.append('Content-Type', 'application/json');\n\n\t\treturn headers;\n\t}\n\n\tprivate _handleStandartRequest<TResponse>(source: Observable<TResponse>): Observable<TResponse> {\n\t\treturn source.pipe(\n\t\t\tmap(resp => {\n\t\t\t\tconst temp = new ApiResponse<TResponse>(resp);\n\n\t\t\t\tif (temp.data) {\n\t\t\t\t\treturn temp.data;\n\t\t\t\t}\n\n\t\t\t\tif (temp.error) {\n\t\t\t\t\tthrow new ApiError(temp.error);\n\t\t\t\t}\n\n\t\t\t\treturn resp;\n\t\t\t})\n\t\t);\n\t}\n}\n","import { FormControl } from '@angular/forms';\r\n\r\n\r\nexport interface IPasswordValidatorOptions {\r\n\trequireDigit?: boolean;\r\n\trequireLowercase?: boolean;\r\n\trequireNonAlphanumeric?: boolean;\r\n\trequireUppercase?: boolean;\r\n\trequiredLength: number;\r\n\trequiredUniqueChars: boolean;\r\n}\r\n\r\nexport class FormValidators {\r\n\tpublic static options: IPasswordValidatorOptions = {\r\n\t\trequireDigit: true,\r\n\t\trequireLowercase: true,\r\n\t\trequireNonAlphanumeric: false,\r\n\t\trequireUppercase: false,\r\n\t\trequiredLength: 6,\r\n\t\trequiredUniqueChars: false\r\n\t};\r\n\tprivate static _requireDigitRegExp: RegExp = /[0-9]/;\r\n\tprivate static  _requireLowercaseRegExp: RegExp = /[a-z]/;\r\n\tprivate static  _requireUppercase: RegExp = /[A-Z]/;\r\n\t// private static  _requiredUniqueChars: RegExp = /[\\.,:;?!*+%\\-<>@[\\]\\/\\\\\\_{}$#]/;\r\n\r\n\tconstructor() {\r\n\t}\r\n\tstatic passValidator(control: FormControl): { [key: string]: any } | null {\r\n\t\tconst uppercasePattern: RegExp = /[A-Z]/i;\r\n\t\tconst lowercasePattern: RegExp = /[a-z]/i;\r\n\t\tconst specSymbolPattern: RegExp = /[\\.,:;?!*+%\\-<>@[\\]\\/\\\\\\_{}$#]/i;\r\n\t\tconst minLengthPattern: RegExp = /^.{8,}$/i;\r\n\t\tif (FormValidators.options.requireDigit && !FormValidators._requireDigitRegExp.test(control.value)) {\r\n\t\t\treturn {\r\n\t\t\t\tpassValidator: true,\r\n\t\t\t\trequiredPattern: FormValidators._requireDigitRegExp,\r\n\t\t\t\tactualValue: control.value\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (FormValidators.options.requireLowercase && !FormValidators._requireLowercaseRegExp.test(control.value)) {\r\n\t\t\treturn {\r\n\t\t\t\tpassValidator: true,\r\n\t\t\t\trequiredPattern: FormValidators._requireLowercaseRegExp,\r\n\t\t\t\tactualValue: control.value\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (FormValidators.options.requireUppercase && !FormValidators._requireUppercase.test(control.value)) {\r\n\t\t\treturn {\r\n\t\t\t\tpassValidator: true,\r\n\t\t\t\trequiredPattern: FormValidators._requireUppercase,\r\n\t\t\t\tactualValue: control.value\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (FormValidators.options.requiredLength && !(new RegExp('^.{' + FormValidators.options.requiredLength + ',}$').test(control.value))) {\r\n\t\t\treturn {\r\n\t\t\t\tpassValidator: true,\r\n\t\t\t\trequiredPattern: new RegExp('/^.{' + FormValidators.options.requiredLength + ',}$/'),\r\n\t\t\t\tactualValue: control.value\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tstatic emailValidator(control: FormControl): { [key: string]: any } | null {\r\n\t\tconst pattern: RegExp = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/i;\r\n\t\tif (!pattern.test(control.value)) {\r\n\t\t\treturn {\r\n\t\t\t\temailValidator: true,\r\n\t\t\t\trequiredPattern: pattern,\r\n\t\t\t\tactualValue: control.value\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { Observable } from 'rxjs';\nimport { ICreateUserParams } from '../models/create-user-params.interface';\n\n@Injectable()\nexport class DataService {\n\n\tconstructor(private _httpService: HttpService) {\n\t}\n\n\tpublic signup(params: ICreateUserParams): Observable<boolean> {\n\t\treturn this._httpService.post<boolean>('/signup', params);\n\t}\n\n\tpublic signin(username: string, password: string): Observable<{ accessToken, refreshToken }> {\n\t\treturn this._httpService.post<{ accessToken, refreshToken }>('/signin', { username, password });\n\t}\n\n\tpublic confirm(hash: string): Observable<void> {\n\t\treturn this._httpService.post<void>('/confirm', { hash });\n\t}\n\n\tpublic forgotPassword(email: string): Observable<void> {\n\t\treturn this._httpService.post<void>('/forgot', { email });\n\t}\n\n\tpublic recovery(hash: string, password: string, confirmPassword: string): Observable<void> {\n\t\treturn this._httpService.post<void>('/recovery', { hash, password, confirmPassword });\n\t}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Form, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormValidators } from '../../shared/form-validators.class';\nimport { DataService } from '../../core/services/data.service';\nimport { EMPTY, pipe } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-signup',\n\ttemplateUrl: './signup.component.html',\n\tstyleUrls: ['./signup.component.scss'],\n\tanimations: [\n\t\ttrigger('anim', [\n\t\t\ttransition('void => *', [\n\t\t\t\tstyle({\n\t\t\t\t\theight: '0px',\n\t\t\t\t\topacity: '0',\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t}),\n\t\t\t\tanimate('150ms ease-out', style({\n\t\t\t\t\theight: '*',\n\t\t\t\t\topacity: '*'\n\t\t\t\t}))\n\t\t\t]),\n\t\t])\n\t]\n})\nexport class SignupComponent implements OnInit {\n\tpublic form: FormGroup;\n\tpublic emailControl: FormControl;\n\tpublic passwordControl: FormControl;\n\tpublic confirmPasswordControl: FormControl;\n\tpublic usernameControl: FormControl;\n\tpublic lastNameControl: FormControl;\n\tpublic firstNameControl: FormControl;\n\n\tpublic errors: string[];\n\t\tpublic loading: boolean;\n\n\tconstructor(private _dataService: DataService, private _router: Router) {\n\t\tthis.emailControl = new FormControl('', [Validators.required, FormValidators.emailValidator]);\n\t\tthis.passwordControl = new FormControl('', [Validators.required, FormValidators.passValidator]);\n\t\tthis.confirmPasswordControl = new FormControl('', [Validators.required, FormValidators.passValidator]);\n\t\tthis.usernameControl = new FormControl('', [Validators.required, Validators.minLength(6)]);\n\t\tthis.lastNameControl = new FormControl('', [Validators.required]);\n\t\tthis.firstNameControl = new FormControl('', [Validators.required]);\n\t\tthis.form = new FormGroup(\n\t\t\t{\n\t\t\t\temail: this.emailControl,\n\t\t\t\tpassword: this.passwordControl,\n\t\t\t\tconfirmPassword: this.confirmPasswordControl,\n\t\t\t\tusername: this.usernameControl,\n\t\t\t\tlastName: this.lastNameControl,\n\t\t\t\tfirstName: this.firstNameControl\n\t\t\t}\n\t\t);\n\t\tthis.errors = [];\n\t\tthis.loading = false;\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tprivate _createNewForm(): void {\n\t\tthis.emailControl = new FormControl('', [Validators.required, FormValidators.emailValidator]);\n\t\tthis.passwordControl = new FormControl('', [Validators.required, FormValidators.passValidator]);\n\t\tthis.confirmPasswordControl = new FormControl('', [Validators.required, FormValidators.passValidator]);\n\t\tthis.usernameControl = new FormControl('', [Validators.required, Validators.minLength(6)]);\n\t\tthis.lastNameControl = new FormControl('', [Validators.required]);\n\t\tthis.firstNameControl = new FormControl('', [Validators.required]);\n\t\tthis.form = new FormGroup(\n\t\t\t{\n\t\t\t\temail: this.emailControl,\n\t\t\t\tpassword: this.passwordControl,\n\t\t\t\tconfirmPassword: this.confirmPasswordControl,\n\t\t\t\tusername: this.usernameControl,\n\t\t\t\tlastName: this.lastNameControl,\n\t\t\t\tfirstName: this.firstNameControl\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic signup(): void {\n\t\tthis.errors = [];\n\n\t\tthis._dataService.signup({\n\t\t\temail: this.emailControl.value,\n\t\t\tpassword: this.passwordControl.value,\n\t\t\tconfirmPassword: this.confirmPasswordControl.value,\n\t\t\tusername: this.usernameControl.value,\n\t\t\tlastName: this.lastNameControl.value,\n\t\t\tfirstName: this.firstNameControl.value\n\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError(({ error }) => {\n\t\t\t\t\tthis._createNewForm();\n\t\t\t\t\tthis.errors = error;\n\t\t\t\t\treturn EMPTY;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis._router.navigate(['signin']);\n\t\t\t});\n\t}\n}\n\n","<form  [formGroup]=\"form\" class=\"form\" fxLayout=\"column\" fxLayoutGap=\"30px\">\n\t<div fxLayoutAlign=\"center center\">\n\t\tSIGN UP\n\t</div>\n\t<div fxLayout=\"column\" fxLayoutGap=\"10px\">\n\n\t\t<mat-form-field>\n\t\t\t<mat-label>email</mat-label>\n\t\t\t<input formControlName=\"email\" matInput type=\"email\">\n\t\t\t<mat-error *ngIf=\"emailControl.invalid\">\n\t\t\t\tinvalid\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field>\n\t\t\t<mat-label>username</mat-label>\n\t\t\t<input formControlName=\"username\" matInput type=\"text\">\n\t\t\t<mat-error>\n\t\t\t\tinvalid\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field >\n\t\t\t<mat-label>last name</mat-label>\n\t\t\t<input formControlName=\"lastName\" matInput type=\"text\">\n\t\t\t<mat-error>\n\t\t\t\tinvalid\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field>\n\t\t\t<mat-label>first name</mat-label>\n\t\t\t<input formControlName=\"firstName\" matInput type=\"text\">\n\t\t\t<mat-error>\n\t\t\t\tinvalid\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field>\n\t\t\t<mat-label>password</mat-label>\n\t\t\t<input formControlName=\"password\" matInput type=\"password\">\n\t\t\t<mat-error>\n\t\t\t\tinvalid\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t\t<mat-form-field>\n\t\t\t<mat-label>confirm password</mat-label>\n\t\t\t<input formControlName=\"confirmPassword\" matInput type=\"password\">\n\t\t\t<mat-error>\n\t\t\t\tinvalid\n\t\t\t</mat-error>\n\t\t</mat-form-field>\n\t</div>\n\t<div *ngFor=\"let error of errors\" @anim class=\"error\">\n\t\t<span>{{error}}</span>\n\t</div>\n\n\t<div>\n\t\t<button [disabled]=\"form.invalid || loading\" mat-raised-button color=\"primary\" (click)=\"signup()\">sign up</button>\n\t</div>\n\t<div fxLayoutAlign=\"space-between\">\n\t\t<div>\n\t\t\t<a routerLink=\"/signin\">Already have any account?</a>\n\t\t</div>\n\t\t<div>\n\t\t\t<a routerLink=\"/forgot\">forgot password?</a>\n\t\t</div>\n\t</div>\n</form>\n\n\n\n\n\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SigninComponent } from './features/signin/signin.component';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './features/signup/signup.component';\nimport { ConfirmComponent } from './features/confirm/confirm.component';\nimport { ForgotPasswordComponent } from './features/forgot-password/forgot-password.component';\nimport { RecoveryPasswordComponent } from './features/recovery-password/recovery-password.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: AppComponent,\n\t\tchildren: [\n\t\t\t{ path: '', redirectTo: 'signup', pathMatch: 'full' },\n\t\t\t{\n\t\t\t\tpath: 'signin',\n\t\t\t\tcomponent: SigninComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'signup',\n\t\t\t\tcomponent: SignupComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'confirm',\n\t\t\t\tcomponent: ConfirmComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'forgot',\n\t\t\t\tcomponent: ForgotPasswordComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'recovery',\n\t\t\t\tcomponent: RecoveryPasswordComponent\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tpath: '*',\n\t\tredirectTo: ''\n\t}\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FormValidators } from '../../shared/form-validators.class';\nimport { Data } from '@angular/router';\nimport { DataService } from '../../core/services/data.service';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n\tselector: 'app-forgot-password',\n\ttemplateUrl: './forgot-password.component.html',\n\tstyleUrls: ['./forgot-password.component.scss'],\n\tanimations: [\n\t\ttrigger('anim', [\n\t\t\ttransition('void => *', [\n\t\t\t\tstyle({\n\t\t\t\t\theight: '0px',\n\t\t\t\t\topacity: '0',\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t}),\n\t\t\t\tanimate('150ms ease-out', style({\n\t\t\t\t\theight: '*',\n\t\t\t\t\topacity: '*'\n\t\t\t\t}))\n\t\t\t]),\n\t\t])\n\t]\n})\nexport class ForgotPasswordComponent implements OnInit {\n\tpublic form: FormGroup;\n\tpublic errors: string[];\n\tpublic canGoToEmail: boolean;\n\n\tconstructor(\n\t\tprivate _dataService: DataService\n\t) {\n\t\tthis.form = new FormGroup(\n\t\t\t{\n\t\t\t\temail: new FormControl('', [Validators.required, FormValidators.emailValidator]),\n\t\t\t}\n\t\t);\n\t\tthis.errors = [];\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tpublic sendLink(): void {\n\t\tthis._dataService.forgotPassword(this.form.controls.email.value)\n\t\t\t.pipe(\n\t\t\t\tcatchError(({error}) => {\n\t\t\t\t\tthis.errors = error;\n\t\t\t\t\treturn EMPTY;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.canGoToEmail = true;\n\t\t\t});\n\t}\n}\n","<form  [formGroup]=\"form\" class=\"form\" fxLayout=\"column\" fxLayoutGap=\"30px\">\n\t<div fxLayoutAlign=\"center center\">\n\t\tFORGOT PASSWORD\n\t</div>\n\t<div fxLayout=\"column\" fxLayoutGap=\"10px\">\n\t\t<mat-form-field>\n\t\t\t<mat-label>email</mat-label>\n\t\t\t<input formControlName=\"email\" matInput type=\"text\">\n\t\t</mat-form-field>\n\t</div>\n\t<div *ngIf=\"canGoToEmail\" @anim class=\"info\">\n\t\t<span>please check your email to recovery your email</span>\n\t</div>\n\t<div *ngFor=\"let error of errors\" @anim class=\"error\">\n\t\t<span>{{error}}</span>\n\t</div>\n\t<div>\n\t\t<button [disabled]=\"form.invalid\" mat-raised-button color=\"primary\" (click)=\"sendLink()\">sign in</button>\n\t</div>\n\t<div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n\t\t<div>\n\t\t\t<a routerLink=\"/signin\">Already have any account?</a>\n\t\t</div>\n\t\t<div>\n\t\t\t<a routerLink=\"/signup\">signup</a>\n\t\t</div>\n\t</div>\n</form>\n\n\n\n\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}